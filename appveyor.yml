version: 1.0.{build}

image:
- Visual Studio 2013

init:
  # Gather some basic build environment details.
  - rem set
  - dir "%ProgramFiles(x86)%\Microsoft Visual Studio *" /b /o
  - dir "%ProgramFiles%\Microsoft SDKs\Windows" /b /o
  - dir "%SystemDrive%\Qt\5.*" /b /o

environment:
  VSVER: 12.0 # Visual Studio 2013
  BOOST_ROOT: C:\Libraries\boost
  
  matrix:
    - QTDIR: C:\Qt\5.5\msvc2013
    - QTDIR: C:\Qt\5.5\msvc2013_64

configuration: release

install:
  - '%QTDIR%\bin\qtenv2.bat'
  - qmake -v
  - if %QTDIR:_64=%==%QTDIR% ( set ARCH=x86 ) else set ARCH=x64
  - if %QTDIR:msvc=%==%QTDIR% g++ --version
  - if %QTDIR:msvc=%==%QTDIR% set make=mingw32-make.exe
  - if %QTDIR:msvc=%==%QTDIR% %make% --version
  - if not %QTDIR:msvc=%==%QTDIR% call "%ProgramFiles(x86)%\Microsoft Visual Studio %VSVER%\VC\vcvarsall.bat" %ARCH%
  - if not %QTDIR:msvc=%==%QTDIR% set make=nmake.exe
  - if not %QTDIR:msvc=%==%QTDIR% %make% /? > nul
  - if %ARCH%==x86 ( set PYTHON_ROOT=C:\Python27 ) else set PYTHON_ROOT=C:\Python27-x64
  - if %ARCH%==x86 ( set BOOST_LIBRARYDIR=C:\Libraries\boost\lib32-msvc-%VSVER% ) else set BOOST_LIBRARYDIR=C:\Libraries\boost\lib64-msvc-%VSVER%
  - if %ARCH%==x86 ( set ISSO=SETUP.iss ) else set ISSO=SETUP_x64.iss
  - if %ARCH%==x86 ( set SETUPOUT=PyLaunchy_Setup.exe ) else set SETUPOUT=PyLaunchy_Setup_x64.exe
  - set PYTHON_INCLUDE_DIR=%PYTHON_ROOT%\include
  - set PYTHON_LIB_FILE=%PYTHON_ROOT%\lib\python27.lib 
  - echo Python root %PYTHON_ROOT%
  - echo Python include %PYTHON_INCLUDE_DIR%
  - echo Python lib %PYTHON_LIB_FILE%
  - choco install -y InnoSetup
  - set PATH=C:\Program Files (x86)\Inno Setup 5;%PATH%
    
before_build:
  # Prepare the out-of-source build directory.
  - mkdir %APPVEYOR_BUILD_FOLDER%-build
  - cd %APPVEYOR_BUILD_FOLDER%-build
  - qmake -Wall -Wlogic -Wparser CONFIG+=%CONFIGURATION% %APPVEYOR_BUILD_FOLDER%\src\PyLaunchy.pro
  
after_build:
  - cd %APPVEYOR_BUILD_FOLDER%\install
  - ISCC %ISSO%
  - dir %APPVEYOR_BUILD_FOLDER%\install\%CONFIGURATION%\
  
artifacts:
  - path: install/release/*.exe

build_script:
  - '%make%'

# fetch repository as zip archive
shallow_clone: true
